{"version":3,"sources":["components/Timer.tsx","components/UploadButton.tsx","components/TimeSetter.tsx","components/VolumeSlider.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","progressBottom","color","palette","grey","progressTop","position","left","in_circle","top","bottom","right","display","alignItems","justifyContent","Timer","props","useState","isPomodoro","setIsPomodoro","isFirstPlay","setIsFirstPlay","isPlay","setIsPlay","second","setSecond","pomodoroTime","minute","setMinute","initialSec","setInitialSec","musicStart","setMusicStart","useEffect","onMusicChange","pomodoroMusic","breakTimeMusic","usrMusic","volume","usrVolume","useInterval","pause","currentTime","musicLenLimit","breakTime","play","console","log","prev","classes","Fragment","Grid","container","justify","style","marginBottom","Box","CircularProgress","size","variant","value","className","Typography","component","fontSize","Math","floor","PlayCircleOutline","onClick","PauseCircleOutline","Restore","BreakTime","IconButton","accept","id","type","onChange","event","selectMusic","target","files","indexOf","alert","LibraryMusic","root","marginTop","TimeSetter","TextField","label","InputLabelProps","shrink","time","val","Number","setTime","NaN","VolumeSlider","isMute","setIsMute","volBeforeMute","setVolBeforeMute","gutterBottom","spacing","Button","setUsrVolume","VolumeUp","VolumeOff","item","xs","Slider","aria-labelledby","settingBtn","fadeBox","width","height","backgroundColor","opacity","zIndex","App","setPomodoroTime","setBreakTime","fade","setFade","defaultMusicUrl","Audio","setPomodoroMusic","setBreakTimeMusic","setUsrMusic","Container","trigger","Settings","modal","onOpen","onClose","isNaN","close","padding","borderRadius","UploadButton","musicUrl","window","URL","createObjectURL","music","visibility","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a719cf1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Restore,\n  PauseCircleOutline,\n  PlayCircleOutline,\n} from \"@material-ui/icons\";\nimport {\n  Box,\n  CircularProgress,\n  createStyles,\n  Grid,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport useInterval from \"use-interval\";\ntype Props = {\n  pomodoroTime: number;\n  breakTime: number;\n  pomodoroMusic: HTMLAudioElement;\n  breakTimeMusic: HTMLAudioElement;\n  usrMusic: HTMLAudioElement;\n  usrVolume: number;\n  onMusicChange: (music: HTMLAudioElement) => void;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    progressBottom: {\n      color: theme.palette.grey[200],\n    },\n    progressTop: {\n      color: \"#aaaaaa\",\n      position: \"absolute\",\n      left: 0,\n    },\n    in_circle: {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  })\n);\nconst Timer: React.FC<Props> = (props) => {\n  const musicLenLimit = 10;\n  const [isPomodoro, setIsPomodoro] = useState<boolean>(true);\n  const [isFirstPlay, setIsFirstPlay] = useState<boolean>(true);\n  const [isPlay, setIsPlay] = useState<boolean>(false);\n  const [second, setSecond] = useState<number>(0);\n  const [minute, setMinute] = useState<number>(props.pomodoroTime);\n  const [initialSec, setInitialSec] = useState<number>(minute * 60 + second);\n\n  const [musicStart, setMusicStart] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!musicStart) {\n      props.onMusicChange(\n        isPomodoro ? props.pomodoroMusic : props.breakTimeMusic\n      );\n    }\n    props.usrMusic.volume = props.usrVolume / 100;\n    // console.log(\"timer:usrVolume\", props.usrVolume);\n  }, [\n    props.usrVolume,\n    props.pomodoroMusic,\n    props.breakTimeMusic,\n    props,\n    isPomodoro,\n    musicStart,\n  ]);\n  useInterval(\n    () => {\n      props.usrMusic.pause();\n      props.usrMusic.currentTime = 0;\n      setMusicStart(!musicStart);\n      props.onMusicChange(\n        isPomodoro ? props.pomodoroMusic : props.breakTimeMusic\n      );\n    },\n    musicStart ? musicLenLimit * 1000 : null\n  );\n  useInterval(\n    () => {\n      if (second <= 0) {\n        if (minute === 0) {\n          if (isPomodoro) {\n            setMinute(props.breakTime);\n            setInitialSec(props.breakTime * 60);\n          } else {\n            setMinute(props.pomodoroTime);\n            setInitialSec(props.pomodoroTime * 60);\n          }\n          setMusicStart(!musicStart);\n          props.usrMusic.volume = props.usrVolume / 100;\n          props.usrMusic.play();\n          setIsPomodoro(!isPomodoro);\n          console.log(props.usrMusic);\n          setSecond(0);\n        } else {\n          setMinute((prev) => prev - 1);\n          setSecond(59);\n        }\n      } else {\n        setSecond((prev) => prev - 1);\n      }\n    },\n    isPlay ? 1000 : null\n  );\n  const resetTimer = () => {\n    setIsPlay(false);\n    setIsFirstPlay(true);\n    setMinute(props.pomodoroTime);\n    setSecond(0);\n    setIsPomodoro(true);\n    setInitialSec(props.pomodoroTime * 60);\n  };\n\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ marginBottom: \"20px\" }}\n      >\n        <Box position=\"relative\" display=\"inline-flex\">\n          <CircularProgress\n            size=\"50vmin\"\n            variant=\"determinate\"\n            value={100}\n            className={classes.progressBottom}\n          />\n          <CircularProgress\n            size=\"50vmin\"\n            variant=\"determinate\"\n            value={100 * (1 - (minute * 60 + second) / initialSec)}\n            className={classes.progressTop}\n          />\n          <Box className={classes.in_circle}>\n            <Typography component=\"div\" color=\"textSecondary\">\n              <Typography style={{ fontSize: \"5vmin\", color: \"#eeeeee\" }}>\n                {isPomodoro ? \"作業中\" : \"休憩中\"}\n              </Typography>\n              <Grid container justify=\"center\" className=\"timer\">\n                <Typography style={{ fontSize: \"5vmin\", color: \"#eeeeee\" }}>\n                  {minute}:\n                  {Math.floor(second / 10) === 0 ? \"0\" + second : second}\n                </Typography>\n              </Grid>\n            </Typography>\n          </Box>\n        </Box>\n      </Grid>\n      <Grid container alignItems=\"center\" justify=\"center\">\n        <PlayCircleOutline\n          onClick={() => {\n            setIsPlay(true);\n            if (isFirstPlay) {\n              setInitialSec(minute * 60 + second);\n            }\n          }}\n          style={{\n            color: \"#eeeeee\",\n            fontSize: \"20vmin\",\n            display: isPlay ? \"none\" : \"\",\n          }}\n        />\n        <PauseCircleOutline\n          onClick={() => {\n            setIsPlay(false);\n            setIsFirstPlay(false);\n          }}\n          style={{\n            color: \"#eeeeee\",\n            fontSize: \"20vmin\",\n            display: isPlay ? \"\" : \"none\",\n          }}\n        />\n        <Restore\n          onClick={resetTimer}\n          style={{\n            color: \"#eeeeee\",\n            fontSize: \"20vmin\",\n          }}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Timer;\n","import { IconButton } from \"@material-ui/core\";\nimport { LibraryMusic } from \"@material-ui/icons\";\n\nimport React from \"react\";\ntype Props = {\n  onMusicChange: (selectMusic: File) => void;\n};\nconst BreakTime: React.FC<Props> = (props) => {\n  return (\n    <IconButton component=\"label\">\n      <input\n        accept=\"audio/*\"\n        id=\"pomodoro-music\"\n        type=\"file\"\n        style={{ display: \"none\" }}\n        onChange={(event) => {\n          const selectMusic =\n            event.target.files !== null ? event.target.files[0] : null;\n          if (selectMusic === null) return;\n          if (selectMusic.type.indexOf(\"audio\") === -1) {\n            alert(\"オーディオファイルを選んでください\");\n            return;\n          }\n          props.onMusicChange(selectMusic);\n        }}\n      />\n      <LibraryMusic></LibraryMusic>\n    </IconButton>\n  );\n};\n\nexport default BreakTime;\n","import { createStyles, makeStyles, TextField, Theme } from \"@material-ui/core\";\nimport React from \"react\";\ntype Props = {\n  time: number;\n  setTime: (num: number) => void;\n  label: string;\n};\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"& > *\": {\n        fontSize: \"20px\",\n        marginTop: \"10px\",\n        marginBottom: \"10px\",\n      },\n    },\n  })\n);\nconst TimeSetter: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  return (\n    <TextField\n      id=\"outlined-number\"\n      label={props.label}\n      type=\"number\"\n      InputLabelProps={{\n        shrink: true,\n      }}\n      variant=\"outlined\"\n      value={props.time}\n      onChange={(event) => {\n        const val = event.target.value;\n        if (val) {\n          if (Number(val) <= 1) {\n            props.setTime(1);\n          } else {\n            props.setTime(Number(val));\n          }\n        } else {\n          props.setTime(Number(NaN));\n        }\n      }}\n      className={classes.root}\n    />\n  );\n};\nexport default TimeSetter;\n","import { Button, Grid, Slider, Typography } from \"@material-ui/core\";\nimport { VolumeOff, VolumeUp } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\ntype Props = {\n  volume: number;\n  setUsrVolume: (volume: number) => void;\n};\nconst VolumeSlider: React.FC<Props> = (props) => {\n  const [isMute, setIsMute] = useState(false);\n  const [volBeforeMute, setVolBeforeMute] = useState(props.volume);\n//   useEffect(() => {\n//     console.log(isMute);\n//   }, [isMute]);\n  return (\n    <React.Fragment>\n      <Typography id=\"input-slider\" gutterBottom>\n        Volume\n      </Typography>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Button\n          onClick={(event) => {\n            setVolBeforeMute(props.volume);\n            props.setUsrVolume(0);\n            setIsMute(!isMute);\n          }}\n          style={{ display: isMute ? \"none\" : \"\" }}\n        >\n          <VolumeUp />\n        </Button>\n        <Button\n          onClick={(event) => {\n            props.setUsrVolume(volBeforeMute);\n            setIsMute(!isMute);\n          }}\n          style={{ display: isMute ? \"\" : \"none\" }}\n        >\n          <VolumeOff />\n        </Button>\n        <Grid item xs>\n          <Slider\n            value={props.volume}\n            onChange={(event, value) => {\n              props.setUsrVolume(value as number);\n            }}\n            aria-labelledby=\"continuous-slider\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default VolumeSlider;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Container,\n  createStyles,\n  Grid,\n  IconButton,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport { Settings } from \"@material-ui/icons\";\nimport Popup from \"reactjs-popup\";\nimport Timer from \"./Timer\";\nimport UploadButton from \"./UploadButton\";\nimport TimeSetter from \"./TimeSetter\";\nimport VolumeSlider from \"./VolumeSlider\";\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    settingBtn: {\n      fontSize: \"10vmin\",\n    },\n    fadeBox: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"#000\",\n      opacity: 0.5,\n      zIndex: 1,\n    },\n  })\n);\nconst App: React.FC = () => {\n  // 時間設定\n  const [pomodoroTime, setPomodoroTime] = useState<number>(25);\n  const [breakTime, setBreakTime] = useState<number>(5);\n  // 設定画面で画面を暗くする\n  const [fade, setFade] = useState<boolean>(false);\n  // 音楽ファイルの設定\n  const defaultMusicUrl = \"http://www.ne.jp/asahi/music/myuu/wave/hana.mp3\";\n  const [pomodoroMusic, setPomodoroMusic] = useState(\n    new Audio(defaultMusicUrl)\n  );\n  const [breakTimeMusic, setBreakTimeMusic] = useState(\n    new Audio(defaultMusicUrl)\n  );\n  const [usrMusic, setUsrMusic] = useState(new Audio(defaultMusicUrl));\n  const [usrVolume, setUsrVolume] = useState<number>(100);\n\n  const classes = useStyles();\n  useEffect(() => {}, [pomodoroTime, breakTime]);\n  return (\n    <React.Fragment>\n      <Container className=\"root\">\n        <Popup\n          trigger={\n            <IconButton\n              style={{\n                color: \"#eeeeee\",\n                position: \"relative\",\n                top: 0,\n                left: \"80%\",\n              }}\n            >\n              <Settings className={classes.settingBtn} />\n            </IconButton>\n          }\n          modal\n          onOpen={() => {\n            setFade(true);\n          }}\n          onClose={() => {\n            setFade(false);\n            if (isNaN(pomodoroTime)) {\n              setPomodoroTime(1);\n            } else if (isNaN(breakTime)) {\n              setBreakTime(1);\n            }\n          }}\n        >\n          {(close: () => void) => (\n            <Grid\n              style={{\n                backgroundColor: \"#eeeeee\",\n                padding: \"20px\",\n                borderRadius: \"10px\",\n              }}\n            >\n              <Grid container alignItems=\"center\" justify=\"center\">\n                <TimeSetter\n                  time={pomodoroTime}\n                  setTime={setPomodoroTime}\n                  label=\"作業時間(min)\"\n                />\n                <UploadButton\n                  onMusicChange={(selectMusic) => {\n                    const musicUrl = window.URL.createObjectURL(selectMusic);\n                    setPomodoroMusic(new Audio(musicUrl));\n                  }}\n                />\n              </Grid>\n              <Grid container alignItems=\"center\" justify=\"center\">\n                <TimeSetter\n                  time={breakTime}\n                  setTime={setBreakTime}\n                  label=\"休憩時間(min)\"\n                />\n\n                <UploadButton\n                  onMusicChange={(selectMusic) => {\n                    const musicUrl = window.URL.createObjectURL(selectMusic);\n                    setBreakTimeMusic(new Audio(musicUrl));\n                  }}\n                />\n              </Grid>\n              <VolumeSlider volume={usrVolume} setUsrVolume={setUsrVolume} />\n              <Grid container alignItems=\"center\" justify=\"center\">\n                <Button\n                  variant=\"outlined\"\n                  onClick={() => {\n                    setFade(false);\n                    close();\n                    if (isNaN(pomodoroTime)) {\n                      setPomodoroTime(1);\n                    } else if (isNaN(breakTime)) {\n                      setBreakTime(1);\n                    }\n                  }}\n                >\n                  OK\n                </Button>\n              </Grid>\n            </Grid>\n          )}\n        </Popup>\n        <Timer\n          pomodoroTime={pomodoroTime}\n          breakTime={breakTime}\n          usrMusic={usrMusic}\n          pomodoroMusic={pomodoroMusic}\n          breakTimeMusic={breakTimeMusic}\n          usrVolume={usrVolume}\n          onMusicChange={(music) => {\n            setUsrMusic(music);\n          }}\n        />\n      </Container>\n      <Box\n        className={classes.fadeBox}\n        style={{ visibility: fade ? \"visible\" : \"hidden\" }}\n      ></Box>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}